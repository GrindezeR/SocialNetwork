{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Friends.tsx","components/Navigation/FriendsContainer.tsx","components/Navigation/Navigation.tsx","common/images/avatar.webp","components/Dialogs/Message/Message.tsx","common/images/dialogAvatar.png","components/Dialogs/DialigItem/DialogsItem.tsx","common/FormsControls/FormsControls.tsx","Utils/validators/validators.ts","components/Dialogs/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","Redux/Dialogs-reducer.ts","HOC/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","API/api.ts","Redux/User-reducer.ts","common/Paginator/Paginator.tsx","common/images/noAvatar.png","components/Users/User/User.tsx","components/Users/Users.tsx","common/Preloader/Preloader.tsx","Redux/User-selectors.ts","components/Users/UsersContainer.tsx","Redux/Auth-reducer.ts","Redux/App-reducer.ts","Redux/Profile-reducer.ts","common/images/workYes.png","common/images/workNo.png","components/Profile/AboutProfile/ProfileStatus.tsx","components/Profile/AboutProfile/AboutProfile.tsx","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","common/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","components/App.tsx","common/images/orc.jpg","common/images/tau.jpg","common/images/chaos.jpg","Redux/Sidebar-reducer.ts","Redux/Redux-store.ts","index.tsx","components/Profile/AboutProfile/AboutProfile.module.css","components/Login/Login.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/Posts/Post.module.css","common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Message/Message.module.css","components/Navigation/Friends.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsForm.module.css","common/FormsControls/FormsControls.module.css","components/Dialogs/DialigItem/DialogsItem.module.css","common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","components/Profile/AboutProfile/ProfileStatus.module.css"],"names":["module","exports","Friends","props","friendList","friends","map","f","className","s","avatar","src","alt","name","id","friendWrapper","friendListWrapper","FriendsContainer","connect","state","sideBar","dispatch","Navigation","navigation","item","to","activeClassName","activeLink","Messages","style","wrapper","angle","message","text","DialogItem","CustomInput","form","touched","errors","field","ClassName","placeholder","customClass","error","errorText","maxLengthCreator","maxLength","value","length","DialogsForm","addMessage","customField","customInput","initialValues","onSubmit","values","actions","resetForm","setSubmitting","messageSendWrapper","validate","submitBtn","type","Dialogs","dialogsElements","dialogsNamesData","d","messagesElements","dialogsMessagesData","m","Message","dialogsWrapper","dialogItems","messages","initialState","v1","dialogsReducer","action","newMessage","trim","withAuthRedirect","Component","isAuth","auth","restProps","ResultCode","compose","dialogsPage","newMessageText","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageLimit","get","then","res","data","userId","post","delete","authAPI","email","password","remember","rememberMe","profileAPI","newStatus","put","status","users","totalUsersCount","isFetching","followingInProgress","followToggle","setCurrentPage","number","setFetching","setFollowingInProgress","isLoading","Paginator","totalCount","pageSize","getUsers","pageCounts","Math","ceil","pages","i","push","pageList","n","page","onClick","pagesWrapper","User","user","followingUsers","unfollowingUsers","followingButton","followed","disabled","some","unfollowBtn","followBtn","userWrapper","avatarWrapper","photos","small","noAvatar","userDataWrapper","location","statusMessage","Users","usersList","u","Preloader","preloader","getUsersSelector","usersPage","getPageLimitSelector","getTotalCountSelector","getCurrentPageSelector","getFollowingInProgressSelector","getIsFetchingSelector","UsersContainer","this","React","a","response","items","resultCode","Success","login","setAuthUserData","payload","setAuthError","getAuthUserData","setLoading","initialized","loading","postData","likesCount","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","large","setProfileStatus","ProfileStatus","editMode","inputValue","activateEdit","setState","deactivateEdit","updateProfileStatus","deactivateEditEnter","e","key","prevProps","prevState","autoFocus","onBlur","onChange","currentTarget","onKeyPress","onFocus","select","onDoubleClick","PureComponent","AboutProfile","profileAvatar","li","workYes","workNo","width","Post","messagePost","likeWrapper","avatarPost","like","countLike","bubbleWrapper","messageText","MyPostsForm","addPost","newPostText","validateOnBlur","newPost","submitButton","MyPosts","postsElements","postsData","p","MyPostsContainer","profilePage","Profile","profileWallpaper","ProfileContainer","match","params","authUserId","toString","getUsersProfile","getProfileStatus","withRouter","Header","header","logo","loginWrapper","Fragment","logBtn","logout","HeaderContainer","Error","LoginForm","useDispatch","errorLogin","useSelector","formik","useFormik","minPassLength","test","validateFormik","formWrapper","handleSubmit","inputs","getFieldProps","loginBtn","Login","title","infoAccount","App","initializeApp","path","exact","render","DialogsContainer","app","orc","tau","chaos","sidebarReducer","rootReducer","combineReducers","filter","postId","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0d24011b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__2Cfrm\",\"item\":\"Navigation_item__2ZcpF\",\"activeLink\":\"Navigation_activeLink__1Veaa\"};","import React from \"react\";\r\nimport s from './Friends.module.css';\r\nimport {FriendsPropsType} from \"./FriendsContainer\";\r\n\r\nfunction Friends(props: FriendsPropsType) {\r\n    const friendList = props.friends.map(f => {\r\n        return (\r\n            <div key={f.id}>\r\n                <img className={s.avatar} src={f.avatar} alt={'avatar'}/>\r\n                <span>{f.name}</span>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={s.friendWrapper}>\r\n            <hr/>\r\n            <span className={s.friends}>Friends</span>\r\n            <div className={s.friendListWrapper}>\r\n                {friendList}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;","import {connect} from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {friendsType} from \"../../Redux/Sidebar-reducer\";\r\n\r\nexport type FriendsPropsType = mapStateToProps & mapDispatchToProps\r\n\r\ntype mapStateToProps = {\r\n    friends: friendsType[]\r\n}\r\n\r\ntype mapDispatchToProps = {}\r\n\r\nconst mstp = (state: AppStateType): mapStateToProps => {\r\n    return {\r\n        friends: state.sideBar\r\n    }\r\n}\r\n\r\nconst mdtp = (dispatch: Dispatch): mapDispatchToProps => {\r\n    return {}\r\n}\r\n\r\nexport const FriendsContainer = connect(mstp, mdtp)(Friends);","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Navigation.module.css';\r\nimport {FriendsContainer} from \"./FriendsContainer\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className={s.navigation}>\r\n            <div className={s.item}>\r\n                <NavLink to={'/profile'} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/news'} activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/music'} activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/settings'} activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/users'} activeClassName={s.activeLink}>Find Users</NavLink>\r\n            </div>\r\n            <div className={s.friends}>\r\n                <FriendsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/avatar.243c9071.webp\";","import React from \"react\";\r\nimport avatar from '../../../common/images/avatar.webp';\r\nimport style from './Message.module.css';\r\nimport {dialogsMessagesDataType} from \"../../../Redux/Dialogs-reducer\";\r\n\r\nfunction Messages(props: dialogsMessagesDataType) {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.avatar}>\r\n                <img src={avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={style.angle}/>\r\n            <div className={style.message}>\r\n                {/*<div className={style.name}>{props.name}</div>*/}\r\n                <span className={style.text}>{props.message}</span>\r\n                {/*<div className={style.time}>{props.time}</div>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Messages;","export default __webpack_public_path__ + \"static/media/dialogAvatar.e005b6fd.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from '../../../common/images/dialogAvatar.png'\r\nimport {dialogsNamesDataType} from \"../../../Redux/Dialogs-reducer\";\r\nimport s from './DialogsItem.module.css';\r\n\r\nfunction DialogItem(props: dialogsNamesDataType) {\r\n    return (\r\n        <NavLink className={s.wrapper} to={`/dialogs/${props.id}`}>\r\n            <img src={avatar} alt={'dialogAvatar'}/>\r\n            <span>{props.name}</span>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {FieldProps} from \"formik\";\r\nimport s from './FormsControls.module.css';\r\n\r\ntype CustomInputPropsType = FieldProps & {\r\n    ClassName: string\r\n    placeholder: string\r\n}\r\n\r\nexport const CustomInput = ({form: {touched, errors}, field,\r\n                                ClassName, placeholder, ...props}: CustomInputPropsType) => {\r\n\r\n    const customClass = (touched && errors[field.name]) ? `${ClassName} ${s.error}` : ClassName\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                placeholder={placeholder}\r\n                className={customClass} {...field} {...props}/>\r\n            <div className={s.errorText}>\r\n                {touched && errors[field.name]}\r\n            </div>\r\n        </>\r\n    );\r\n}","import {FormikErrorType} from \"../../components/Login/LoginForm\";\r\n\r\nexport const required = (value: string) => {\r\n    let error = ''\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    error = `Field required`\r\n    return error\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n    let error = ''\r\n    return (value: string) => {\r\n        if (value.length > maxLength) {\r\n            error = `Max length is ${maxLength} symbols`\r\n            return error;\r\n        }\r\n        return undefined\r\n    }\r\n}\r\ntype ValuesType = {\r\n    email: string\r\n    password: string\r\n    remember: boolean\r\n}\r\n\r\nexport const validateFormik = (values: ValuesType,\r\n                               errors: FormikErrorType,\r\n                               minPassLength: number) => {\r\n    if (!values.email) {\r\n        errors.email = 'Email is required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password required';\r\n    } else if (values.password.length < minPassLength) {\r\n        errors.password = `Min length ${minPassLength} characters`;\r\n    }\r\n    return errors;\r\n}","import {Field, FieldProps, Form, Formik, FormikHelpers} from \"formik\";\r\nimport s from \"./DialogsForm.module.css\";\r\nimport React from \"react\";\r\nimport {CustomInput} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator} from \"../../Utils/validators/validators\";\r\n\r\ntype DialogsFormType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\n\r\ntype MessageFormValues = {\r\n    message: string\r\n}\r\n\r\nexport const DialogsForm = ({addMessage}: DialogsFormType) => {\r\n    const initialValues: MessageFormValues = {\r\n        message: ''\r\n    }\r\n\r\n    const onSubmitHandler = (values: MessageFormValues, actions: FormikHelpers<MessageFormValues>) => {\r\n        // console.log(values.message);\r\n        addMessage(values.message);\r\n        actions.resetForm();\r\n        actions.setSubmitting(false);\r\n    }\r\n\r\n    const customField = (props: FieldProps) => {\r\n        return <CustomInput ClassName={s.customInput}\r\n                            placeholder={`Type you message`}\r\n                            {...props}/>\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} onSubmit={onSubmitHandler}>\r\n            {\r\n                ({errors}) => (\r\n                    <Form className={s.messageSendWrapper}>\r\n                        <Field name={'message'}\r\n                               validate={maxLengthCreator(3)}>\r\n                            {customField}\r\n                        </Field>\r\n                        <div>\r\n                            <button className={s.submitBtn} type={'submit'}>Send</button>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    );\r\n}","import s from './Dialogs.module.css';\r\nimport Messages from \"./Message/Message\";\r\nimport DialogItem from \"./DialigItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {DialogsForm} from \"./DialogsForm\";\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n    const dialogsElements = props.dialogsNamesData.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\r\n    const messagesElements = props.dialogsMessagesData.map(m => <Messages key={m.id} id={m.id}\r\n                                                                          message={m.message}/>)\r\n    // const addMessage = () => {\r\n    //     props.addMessage();\r\n    // }\r\n    // const onEnterAddMessage = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if (e.key === 'Enter') {\r\n    //         e.preventDefault();\r\n    //         addMessage();\r\n    //     }\r\n    // }\r\n    // const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     props.onMessageChange(e.currentTarget.value);\r\n    // }\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogItems}>\r\n                <span>{dialogsElements}</span>\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>\r\n                    <span>{messagesElements}</span>\r\n                </div>\r\n                <DialogsForm addMessage={props.addMessage}/>\r\n                {/*<div className={s.messageSendWrapper}>*/}\r\n                {/*    <textarea*/}\r\n                {/*        placeholder={'Type your message'}*/}\r\n                {/*        className={s.textarea}*/}\r\n                {/*        onKeyPress={onEnterAddMessage}*/}\r\n                {/*        onChange={onMessageChange}*/}\r\n                {/*        value={props.newMessageText}/>*/}\r\n                {/*    <button*/}\r\n                {/*        className={s.submitBtn}*/}\r\n                {/*        onClick={addMessage}>Send*/}\r\n                {/*    </button>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import {v1} from \"uuid\";\r\n\r\nexport type dialogsNamesDataType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type dialogsMessagesDataType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    dialogsNamesData: [\r\n        {id: v1(), name: 'Alex'},\r\n        {id: v1(), name: 'Bob'},\r\n        {id: v1(), name: 'Tom'},\r\n        {id: v1(), name: 'John'},\r\n    ] as dialogsNamesDataType[],\r\n\r\n    dialogsMessagesData: [\r\n        {id: v1(), message: 'Hello'},\r\n        {id: v1(), message: 'How are you?'},\r\n        {id: v1(), message: 'Lets go!'},\r\n        {id: v1(), message: 'Hi all!'},\r\n        {id: v1(), message: 'Its work...'},\r\n    ] as dialogsMessagesDataType[],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'DIALOG/ADD-MESSAGE':\r\n            if (action.newMessage.trim() !== '') {\r\n                return {\r\n                    ...state,\r\n                    dialogsMessagesData: [\r\n                        ...state.dialogsMessagesData,\r\n                        {id: v1(), message: action.newMessage}\r\n                    ]\r\n                }\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type DialogsActionsType = addMessageActionType\r\n\r\ntype addMessageActionType = ReturnType<typeof addMessage>;\r\n\r\nexport const addMessage = (newMessageText: string) => {\r\n    return {type: \"DIALOG/ADD-MESSAGE\", newMessage: newMessageText} as const\r\n};\r\n\r\nexport default dialogsReducer;","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/Redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype MstpType = {\r\n    isAuth: boolean\r\n}\r\n// Создаем HOC чтобы не писать в каждой компоненте проверку на авторизацию,\r\n// просто оборачиваем нужные компоненты в данный HOC\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MstpType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const mstp = (state: AppStateType): MstpType => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    return connect(mstp)(RedirectComponent)\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {\r\n    addMessage,\r\n    dialogsMessagesDataType,\r\n    dialogsNamesDataType,\r\n} from \"../../Redux/Dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {ComponentType} from \"react\";\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    dialogsNamesData: dialogsNamesDataType[]\r\n    dialogsMessagesData: dialogsMessagesDataType[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (newMessage: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsNamesData: state.dialogsPage.dialogsNamesData,\r\n        dialogsMessagesData: state.dialogsPage.dialogsMessagesData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (newMessageText: string) => dispatch(addMessage(newMessageText)),\r\n    }\r\n}\r\n\r\n// Compose позволяет нам собрать все обертки\\HOC's вместе и обернуть целевую компоненту,\r\n// важна последовательность, на данном примере - возьми Dialogs и передай в withAuthRedirect,\r\n// далее возьми ее результат и передай в connect, т.е. распутываем снизу вверх\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs) as ComponentType\r\n\r\n","import axios from \"axios\";\r\nimport {UsersType} from \"../Redux/User-reducer\";\r\nimport {ProfileType} from \"../Redux/Profile-reducer\";\r\n\r\n\r\ntype GetUsersType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n}\r\ntype ResponseType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: ResultCode,\r\n}\r\n\r\nexport enum ResultCode {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '761e6f2b-b609-440b-9ec5-0bbc9398cba5',\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageLimit: number) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageLimit}`)\r\n            .then(res => res.data)\r\n    },\r\n    setFollow(userId: number) {\r\n        return instance.post<ResponseType>(`follow/${userId}`, {})\r\n            .then(res => res.data)\r\n    },\r\n    setUnfollow(userId: number) {\r\n        return instance.delete<ResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    //Залогинены ли мы?\r\n    me() {\r\n        return instance.get<ResponseType<{ id: number, email: string, login: string }>>\r\n        (`auth/me`).then(res => res.data)\r\n    },\r\n\r\n    login(email: string, password: string, remember: boolean) {\r\n        return instance.post<ResponseType<{ userId: number }>>\r\n        (`auth/login`, {email: email, password: password, rememberMe: remember,})\r\n            .then(res => res.data)\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n    },\r\n\r\n    setStatus(newStatus: string) {\r\n        return instance.put<ResponseType>(`profile/status`, {status: newStatus})\r\n            .then(res => res.data)\r\n    }\r\n}","import {ResultCode, usersAPI} from \"../API/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageLimit: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    currentPage: 1,\r\n    pageLimit: 10,\r\n    totalUsersCount: 200,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: UserActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"USER/SET-USERS\":\r\n            return {...state, users: [...action.users]}\r\n        case \"USER/FOLLOW-TOGGLE\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: !u.followed} : u)\r\n            }\r\n        case \"USER/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.number}\r\n        case \"USER/SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalUsersCount: action.number}\r\n        case \"USER/SET-FETCHING\":\r\n            return {...state, isFetching: action.status}\r\n        case \"USER/FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isLoading ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UserActionsType = unFollowActionType\r\n    | setUsersActionType | setCurrentPageActionType\r\n    | setTotalUsersCountActionType | setFetchingActionType | followingInProgress\r\n\r\ntype unFollowActionType = ReturnType<typeof followToggle>;\r\ntype setUsersActionType = ReturnType<typeof setUsers>;\r\ntype setCurrentPageActionType = ReturnType<typeof setCurrentPage>;\r\ntype setTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>;\r\ntype setFetchingActionType = ReturnType<typeof setFetching>;\r\ntype followingInProgress = ReturnType<typeof setFollowingInProgress>;\r\n\r\nexport const followToggle = (userId: number) => {\r\n    return {type: 'USER/FOLLOW-TOGGLE', userId} as const\r\n}\r\nexport const setUsers = (users: UsersType[]) => {\r\n    return {type: 'USER/SET-USERS', users} as const\r\n}\r\nexport const setCurrentPage = (number: number) => {\r\n    return {type: 'USER/SET-CURRENT-PAGE', number} as const\r\n}\r\nexport const setTotalUsersCount = (number: number) => {\r\n    return {type: 'USER/SET-TOTAL-USERS-COUNT', number} as const\r\n}\r\nexport const setFetching = (status: boolean) => {\r\n    return {type: 'USER/SET-FETCHING', status} as const\r\n}\r\nexport const setFollowingInProgress = (isLoading: boolean, userId: number) => {\r\n    return {type: 'USER/FOLLOWING-PROGRESS', isLoading, userId} as const\r\n}\r\n\r\n//Thunks\r\nexport const getUsers = (page: number, pageLimit: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const response = await usersAPI.getUsers(page, pageLimit)\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setFetching(false));\r\n    // setTotalUsersCount(response.data.totalCount); //Too many users\r\n}\r\n\r\nexport const followingUsers = (userId: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    const response = await usersAPI.setFollow(userId)\r\n    if (response.resultCode === ResultCode.Success) {\r\n        dispatch(followToggle(userId));\r\n        dispatch(setFollowingInProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport const unfollowingUsers = (userId: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    const response = await usersAPI.setUnfollow(userId)\r\n    if (response.resultCode === ResultCode.Success) {\r\n        dispatch(followToggle(userId));\r\n        dispatch(setFollowingInProgress(false, userId));\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    getUsers: (n: number) => void\r\n}\r\nexport const Paginator = ({totalCount, pageSize, currentPage, getUsers}: PropsType) => {\r\n    let pageCounts = Math.ceil(totalCount / pageSize);\r\n    const pages = [];\r\n\r\n    // // Google Pagination\r\n    // let pageLimit = 10;\r\n    // let startPage = props.currentPage - pageLimit / 2;\r\n    // let endPage = props.currentPage + pageLimit / 2;\r\n    //\r\n    // if (startPage < 1) {\r\n    //     startPage = 1;\r\n    //     endPage = pageLimit;\r\n    // }\r\n    //\r\n    // if (endPage > pageCounts) {\r\n    //     endPage = pageCounts;\r\n    //     startPage = pageCounts - pageLimit;\r\n    // }\r\n    //\r\n    // for (let i = startPage; i <= endPage; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    for (let i = 1; i <= pageCounts; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const pageList = pages.map(n => {\r\n        const onClickGetUsersByPage = () => getUsers(n);\r\n\r\n        return (\r\n            <span key={n} className={currentPage === n ? s.currentPage : s.page}\r\n                  onClick={onClickGetUsersByPage}>{n}\r\n            </span>\r\n        );\r\n    })\r\n\r\n    //Functions Buttons\r\n    const firstPageHandler = () => getUsers(1);\r\n    const lastPageHandler = () => getUsers(pageCounts);\r\n    const nextPageHandler = () => getUsers(currentPage + 1);\r\n    const previousPageHandler = () => getUsers(currentPage - 1);\r\n\r\n    //COMPLETE JSX\r\n    return (\r\n        <div className={s.pagesWrapper}>\r\n            <span className={s.page} onClick={firstPageHandler}>{'<<'}</span>\r\n            <span className={s.page} onClick={previousPageHandler}>{'<'}</span>\r\n            <div className={s.pageList}>\r\n                {pageList}\r\n            </div>\r\n            <span className={s.page} onClick={nextPageHandler}>{'>'}</span>\r\n            <span className={s.page} onClick={lastPageHandler}>{'>>'}</span>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/noAvatar.e005b6fd.png\";","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport noAvatar from '../../../common/images/noAvatar.png';\r\nimport {UsersType} from \"../../../Redux/User-reducer\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const User = ({user, followingUsers, unfollowingUsers, followingInProgress}: UserPropsType) => {\r\n    const onClickFollowHandler = () => followingUsers(user.id);\r\n    const onClickUnfollowHandler = () => unfollowingUsers(user.id);\r\n\r\n    const followingButton = user.followed ?\r\n        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={onClickUnfollowHandler}\r\n                className={s.unfollowBtn}>Unfollow</button>\r\n        :\r\n        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={onClickFollowHandler}\r\n                className={s.followBtn}>Follow</button>\r\n\r\n    return (\r\n        <div className={s.userWrapper}>\r\n            <div className={s.avatarWrapper}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={s.avatar}\r\n                         src={user.photos.small ? user.photos.small : noAvatar}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n                {followingButton}\r\n            </div>\r\n            <div className={s.userDataWrapper}>\r\n                <span className={s.name}>{user.name}</span>\r\n                <span className={s.location}>u.location.country</span>\r\n                <span className={s.location}>u.location.city</span>\r\n                <span className={s.statusMessage}>{user.status}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {UsersType} from \"../../Redux/User-reducer\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {User} from \"./User/User\";\r\n\r\ntype UsersPropsType = {\r\n    users: UsersType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    followingInProgress: number[]\r\n    getUsers: (number: number) => void\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n}\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    const usersList = props.users.map(u =>\r\n        <User key={u.id}\r\n              user={u}\r\n              followingUsers={props.followingUsers}\r\n              unfollowingUsers={props.unfollowingUsers}\r\n              followingInProgress={props.followingInProgress}\r\n        />\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalCount={props.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       currentPage={props.currentPage}\r\n                       getUsers={props.getUsers}\r\n            />\r\n            {usersList}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n            <div className={s.preloader}/>\r\n    );\r\n}","import {AppStateType} from \"./Redux-store\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => state.usersPage.users\r\nexport const getPageLimitSelector = (state: AppStateType) => state.usersPage.pageLimit\r\nexport const getPageSizeSelector = (state: AppStateType) => state.usersPage.pageLimit\r\nexport const getTotalCountSelector = (state: AppStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPageSelector = (state: AppStateType) => state.usersPage.currentPage\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => state.usersPage.followingInProgress\r\nexport const getIsFetchingSelector = (state: AppStateType) => state.usersPage.isFetching\r\n\r\n//Пример селектора через библиотеку reselect\r\n// export const getUsersSuper = createSelector([getUsersSelector], (users: UsersType[]) => {\r\n//     users.filter(u => true)\r\n// })","import {connect} from \"react-redux\";\r\nimport {\r\n    followingUsers,\r\n    followToggle,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    unfollowingUsers,\r\n    UsersType\r\n} from \"../../Redux/User-reducer\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getFollowingInProgressSelector,\r\n    getCurrentPageSelector,\r\n    getPageLimitSelector,\r\n    getTotalCountSelector,\r\n    getUsersSelector, getIsFetchingSelector\r\n} from \"../../Redux/User-selectors\";\r\n\r\nexport class UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageLimit);\r\n    }\r\n\r\n    getUsers = (page: number) => {\r\n        this.props.getUsers(page, this.props.pageLimit);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching && <Preloader/>}\r\n                <Users users={this.props.users}\r\n                       totalCount={this.props.totalCount}\r\n                       pageSize={this.props.pageLimit}\r\n                       currentPage={this.props.currentPage}\r\n                       getUsers={this.getUsers}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       followingUsers={this.props.followingUsers}\r\n                       unfollowingUsers={this.props.unfollowingUsers}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\ntype mapStateToPropsType = {\r\n    users: UsersType[],\r\n    totalCount: number,\r\n    pageLimit: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\ntype mapDispatchToPropsType = {\r\n    setCurrentPage: (number: number) => void\r\n    getUsers: (currentPage: number, pageLimit: number) => void\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n}\r\n\r\n// const mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageLimit: state.usersPage.pageLimit,\r\n//         totalCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageLimit: getPageLimitSelector(state),\r\n        totalCount: getTotalCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        followToggle, setCurrentPage, setFollowingInProgress,\r\n        getUsers, followingUsers, unfollowingUsers\r\n    }),\r\n)(UsersContainer) as ComponentType","import {Dispatch} from \"redux\";\r\nimport {authAPI, ResultCode} from \"../API/api\";\r\nimport {AppThunk} from \"./Redux-store\";\r\nimport {setLoading} from \"./App-reducer\";\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    remember: false,\r\n    password: '',\r\n    error: '',\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {...state, ...action.payload}\r\n        case \"AUTH/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type AuthActionsType = setAuthDataActionType | setAuthErrorActionType\r\n\r\nexport type setAuthDataActionType = ReturnType<typeof setAuthUserData>;\r\ntype setAuthErrorActionType = ReturnType<typeof setAuthError>;\r\n\r\n//AC\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET-USER-DATA',\r\n        payload: {\r\n            userId, email, login, isAuth\r\n        }\r\n    } as const\r\n}\r\nexport const setAuthError = (error: string) => {\r\n    return {type: 'AUTH/SET-ERROR', error} as const\r\n}\r\n\r\n//TC\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true));\r\n    const response = await authAPI.me()\r\n    if (response.resultCode === ResultCode.Success) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n    dispatch(setLoading(false));\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, remember: boolean): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(setLoading(true));\r\n        const response = await authAPI.login(email, password, remember)\r\n        if (response.resultCode === ResultCode.Success) {\r\n            dispatch(getAuthUserData());\r\n        } else if (response.resultCode === ResultCode.Error) {\r\n            dispatch(setAuthError(response.messages[0] ?? 'Unknown error'));\r\n        }\r\n        dispatch(setLoading(false));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true));\r\n    const response = await authAPI.logout()\r\n    if (response.resultCode === ResultCode.Success) {\r\n        dispatch(setAuthUserData(0, '', '', false));\r\n    } else if (response.resultCode === ResultCode.Error) {\r\n        dispatch(setAuthError(response.messages[0] ?? 'Unknown error'));\r\n    }\r\n    dispatch(setLoading(false));\r\n}\r\n\r\n\r\n\r\n","import {getAuthUserData} from \"./Auth-reducer\";\r\nimport {AppThunk} from \"./Redux-store\";\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n    loading: boolean\r\n}\r\nexport const initialState: InitialStateType = {\r\n    initialized: false,\r\n    loading: false\r\n}\r\n\r\nexport const AppReducer = (state = initialState, action: AppActionsType) => {\r\n    switch (action.type) {\r\n        case \"APP/SET-INITIALIZED\":\r\n            return {...state, initialized: true}\r\n        case \"APP/SET-LOADING\":\r\n            return {...state, loading: action.status}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type AppActionsType = ReturnType<typeof setAppInitialized>\r\n    | ReturnType<typeof setLoading>\r\n\r\nexport const setAppInitialized = () => {\r\n    return {type: 'APP/SET-INITIALIZED'} as const\r\n}\r\nexport const setLoading = (status: boolean) => {\r\n    return {type: 'APP/SET-LOADING', status} as const\r\n}\r\n\r\n\r\nexport const initializeApp = (): AppThunk => async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(setAppInitialized());\r\n}","import {v1} from \"uuid\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI, ResultCode} from \"../API/api\";\r\nimport {setLoading} from \"./App-reducer\";\r\n\r\nexport type PostDataType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type InitialStateType = {\r\n    postData: PostDataType[]\r\n    profile: ProfileType\r\n    status: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    postData: [\r\n        {id: v1(), message: 'Hello ALL!', likesCount: 15},\r\n        {id: v1(), message: 'How are you?', likesCount: 30},\r\n        {id: v1(), message: 'LOL', likesCount: 230},\r\n    ],\r\n\r\n    profile: {\r\n        aboutMe: '',\r\n        contacts: {\r\n            facebook: '',\r\n            website: '',\r\n            vk: '',\r\n            twitter: '',\r\n            instagram: '',\r\n            youtube: '',\r\n            github: '',\r\n            mainLink: ''\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: '',\r\n        userId: 0,\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        }\r\n    },\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PROFILE/ADD-POST\":\r\n            if (action.newPostText.trim() !== '') {\r\n                return {\r\n                    ...state,\r\n                    postData: [\r\n                        {id: v1(), message: action.newPostText, likesCount: 0},\r\n                        ...state.postData\r\n                    ],\r\n                }\r\n            }\r\n            return state;\r\n\r\n        case \"PROFILE/SET-USERS-PROFILE\":\r\n            return {...state, profile: action.profile}\r\n        case \"PROFILE/SET-STATUS-PROFILE\":\r\n            return {...state, status: action.status}\r\n        case \"PROFILE/DELETE-POST\":\r\n            return {...state, postData: state.postData.filter(p => p.id !== action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ProfileActionType = addPostActionType | setUsersProfileActionType\r\n    | setUserStatusActionsType | ReturnType<typeof deletePost>\r\n\r\n\r\nexport type addPostActionType = ReturnType<typeof addPost>;\r\ntype setUsersProfileActionType = ReturnType<typeof setUsersProfile>;\r\ntype setUserStatusActionsType = ReturnType<typeof setProfileStatus>;\r\n\r\n//Action Creators\r\nexport const addPost = (newPostText: string) => {\r\n    return {type: \"PROFILE/ADD-POST\", newPostText} as const\r\n};\r\nexport const setUsersProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: 'PROFILE/SET-USERS-PROFILE', profile\r\n    } as const\r\n}\r\nexport const setProfileStatus = (status: string) => {\r\n    return {\r\n        type: 'PROFILE/SET-STATUS-PROFILE', status\r\n    } as const\r\n}\r\nexport const deletePost = (postId: string) => {\r\n    return {type: 'PROFILE/DELETE-POST', postId} as const\r\n}\r\n\r\n//Thunk Creators\r\nexport const getUsersProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true));\r\n    const response = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUsersProfile(response));\r\n    dispatch(setLoading(false));\r\n}\r\n\r\nexport const getProfileStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true));\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setProfileStatus(response.data));\r\n    dispatch(setLoading(false));\r\n}\r\n\r\nexport const updateProfileStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true));\r\n    const response = await profileAPI.setStatus(status)\r\n    if (response.resultCode === ResultCode.Success) {\r\n        dispatch(setProfileStatus(status))\r\n    }\r\n    dispatch(setLoading(false));\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/workYes.65e14c93.png\";","export default __webpack_public_path__ + \"static/media/workNo.b9f3c2ef.png\";","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from './ProfileStatus.module.css'\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.PureComponent<ProfileStatusPropsType> {\r\n    // Так создается state в классовых компонентах\r\n    state = {\r\n        editMode: false,\r\n        inputValue: this.props.status,\r\n    }\r\n\r\n    //Важно использовать тут стрелочную функцию, чтобы не потерять контекст this\r\n    // т.к. контекст стреклки определяется в момент инициализации,\r\n    // в таком случае это будет наш объект/компонента\r\n    activateEdit = () => {\r\n        // Так state можно модифицировать, setState - асинхронная операция\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEdit = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n\r\n        if(this.state.inputValue !== this.props.status) {\r\n            this.props.updateProfileStatus(this.state.inputValue);\r\n        }\r\n    }\r\n\r\n    deactivateEditEnter = (e: KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            this.deactivateEdit();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                inputValue: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            this.setState({\r\n                inputValue: e.currentTarget.value\r\n            })\r\n        }\r\n\r\n        const selectAllHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n          e.currentTarget.select();\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {this.state.editMode ?\r\n                    <input value={this.state.inputValue}\r\n                           autoFocus\r\n                           onBlur={this.deactivateEdit}\r\n                           onChange={onChangeInputHandler}\r\n                           onKeyPress={this.deactivateEditEnter}\r\n                           onFocus={selectAllHandler}\r\n                    />\r\n                    :\r\n                    <span className={s.status}\r\n                          onDoubleClick={this.activateEdit}>\r\n                {this.props.status || 'No status'}\r\n                </span>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport avatar from '../../../common/images/avatar.webp';\r\nimport s from './AboutProfile.module.css';\r\nimport {ProfileType} from \"../../../Redux/Profile-reducer\";\r\nimport workYes from '../../../common/images/workYes.png';\r\nimport workNo from '../../../common/images/workNo.png';\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype AboutProfileType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\n\r\nfunction AboutProfile(props: AboutProfileType) {\r\n    let {profile, status} = props\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div>\r\n                <img className={s.profileAvatar}\r\n                     src={profile.photos.large ? profile.photos.large : avatar}\r\n                     alt={'Avatar'}/>\r\n            </div>\r\n            <div>\r\n                <div className={s.name}>\r\n                    {profile.fullName}\r\n                    <ProfileStatus status={status}\r\n                                   updateProfileStatus={props.updateProfileStatus}/>\r\n                </div>\r\n\r\n                <ul>\r\n                    <li className={s.li}>\r\n                        <span>About Me:</span> {profile.aboutMe}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>\r\n                            Looking for job:\r\n                        </span>\r\n                        <img src={profile.lookingForAJob ? workYes : workNo} width={'20px'} alt=\"job\"/>\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Description for job:</span> {profile.lookingForAJobDescription}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>VK:</span> {profile.contacts.vk}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Facebook:</span> {profile.contacts.facebook}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Website:</span> {profile.contacts.website}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Twitter:</span> {profile.contacts.twitter}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Instagram:</span> {profile.contacts.instagram}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Youtube:</span> {profile.contacts.youtube}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>GitHub:</span> {profile.contacts.github}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutProfile;","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport avatarPost from '../../../../common/images/avatar.webp'\r\nimport {PostDataType} from \"../../../../Redux/Profile-reducer\";\r\n\r\nfunction Post(props: PostDataType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.messagePost}>\r\n                <div className={s.likeWrapper}>\r\n                    <img className={s.profileAvatar} src={avatarPost} alt={'Avatar'}/>\r\n                    <div className={s.like}>Like</div>\r\n                    <div className={s.countLike}>{props.likesCount}</div>\r\n                </div>\r\n                <div className={s.bubbleWrapper}>\r\n                    <div className={s.angle}/>\r\n                    <span className={s.messageText}>{props.message}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import {Field, Form, Formik, FormikHelpers} from \"formik\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator} from \"../../../Utils/validators/validators\";\r\nimport {CustomInput} from \"../../../common/FormsControls/FormsControls\";\r\nimport {FieldProps} from \"formik/dist/Field\";\r\n\r\ntype NewPostType = {\r\n    newPostText: string\r\n}\r\ntype MyPostsFormPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\nexport const MyPostsForm = ({addPost}: MyPostsFormPropsType) => {\r\n\r\n    const initialValues: NewPostType = {\r\n        newPostText: ''\r\n    }\r\n\r\n    const onSubmitHandler = (values: NewPostType, actions: FormikHelpers<NewPostType>) => {\r\n        addPost(values.newPostText);\r\n        actions.resetForm();\r\n        actions.setSubmitting(false);\r\n    }\r\n\r\n    const customField = (props: FieldProps) => {\r\n        return <CustomInput ClassName={s.customInput}\r\n                            placeholder={`Type your post`}\r\n                            {...props}/>\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmitHandler}\r\n            validateOnBlur={false}>\r\n                    <Form className={s.newPost}>\r\n                        <Field name={'newPostText'}\r\n                               validate={maxLengthCreator(5)}\r\n                               placeholder={'Type your post'}>\r\n                            {customField}\r\n                        </Field>\r\n                        <button className={s.submitButton} type={'submit'}>Send</button>\r\n                    </Form>\r\n        </Formik>\r\n    );\r\n}","import React from \"react\";\r\nimport Post from \"./Posts/Post\";\r\nimport s from './MyPosts.module.css';\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n    const postsElements = props.postsData.map(p => {\r\n        return (\r\n            <Post key={p.id}\r\n                  id={p.id}\r\n                  message={p.message}\r\n                  likesCount={p.likesCount}/>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <MyPostsForm addPost={props.addPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport {addPost, PostDataType} from \"../../../Redux/Profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// Типизация пропсов для компоненты которая сидит в обертке\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    postsData: PostDataType[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        postsData: state.profilePage.postData,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPost(newPostText)),\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport AboutProfile from \"./AboutProfile/AboutProfile\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div className={s.profileWallpaper}>\r\n            <AboutProfile profile={props.profile}\r\n                          updateProfileStatus={props.updateProfileStatus}\r\n                          status={props.status}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {getProfileStatus, getUsersProfile, ProfileType, updateProfileStatus} from \"../../Redux/Profile-reducer\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<withRouterPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            // userId = '20102';\r\n            userId = this.props.authUserId.toString();\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.props.profile && <Preloader/>}\r\n                <Profile {...this.props}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport type ProfilePropsType = mapStateToPropsType & mapDispatchToPropsType\r\ntype withRouterPropsType = RouteComponentProps<PathParamsType> & ProfilePropsType;\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType,\r\n    status: string,\r\n    authUserId: number,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUsersProfile: (userId: string) => void\r\n    getProfileStatus: (userId: string) => void\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUsersProfile, getProfileStatus, updateProfileStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","export default __webpack_public_path__ + \"static/media/logo.22f4aac7.png\";","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport logo from '../../common/images/logo.png'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt={'logo'}/>\r\n            <div className={s.loginWrapper}>\r\n                {\r\n                    props.isAuth ?\r\n                        <React.Fragment>\r\n                            {props.login}\r\n                            <NavLink className={s.login} to={'/login'}>\r\n                                <button className={s.logBtn} onClick={props.logout}>Log out</button>\r\n                            </NavLink>\r\n                        </React.Fragment>\r\n                        :\r\n                        <NavLink className={s.login} to={'/login'}>\r\n                            <button className={s.logBtn}>Login</button>\r\n                        </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {getAuthUserData, logout} from \"../../Redux/Auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nexport type HeaderPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void\r\n    logout: () => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {login} from \"../../Redux/Auth-reducer\";\r\nimport s from \"./Login.module.css\";\r\nimport React from \"react\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {validateFormik} from \"../../Utils/validators/validators\";\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const errorLogin = useSelector<AppStateType, string>(state => state.auth.error);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            remember: false,\r\n        },\r\n        onSubmit: values => {\r\n            // console.log({values});\r\n            let {email, password, remember} = values\r\n            dispatch(login(email, password, remember));\r\n            formik.resetForm();\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            validateFormik(values, errors, 3);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form className={s.formWrapper} onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <div>Email</div>\r\n                <input className={s.inputs}\r\n                       placeholder=\"Type email\"\r\n                       {...formik.getFieldProps('email')}/>\r\n                {formik.touched.email && formik.errors.email &&\r\n                    <span className={s.error}>{formik.errors.email}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <div>Password</div>\r\n                <input className={s.inputs}\r\n                       type=\"password\"\r\n                       placeholder=\"Type password\"\r\n                       {...formik.getFieldProps('password')}\r\n                />\r\n                {formik.touched.password && formik.errors.password &&\r\n                    <span className={s.error}>{formik.errors.password}</span>}\r\n            </div>\r\n            <div>\r\n                <input type={\"checkbox\"} {...formik.getFieldProps('remember')}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n            {errorLogin && <div className={s.error}>{errorLogin}</div>}\r\n            <button className={s.loginBtn} type=\"submit\">LogIn</button>\r\n        </form>\r\n    );\r\n}","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login = () => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <Redirect to={'/profile'}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>Login to Social Network</div>\r\n            <LoginForm/>\r\n            <div className={s.infoAccount}>\r\n                <span>Free Account Data:</span>\r\n                <span>Email: free@samuraijs.com</span>\r\n                <span>Password: free</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Header/HeaderContainer\";\r\nimport {Login} from \"./Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"../Redux/App-reducer\";\r\nimport {AppStateType} from \"../Redux/Redux-store\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\nclass App extends Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                {this.props.loading && <Preloader/>}\r\n                <HeaderContainer/>\r\n                <Navigation/>\r\n\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path={'/'} exact render={() => <Redirect to={'/profile'}/>}/>\r\n                    <Route render={() => <ProfileContainer/>} path={'/profile/:userId?'}/>\r\n                    <Route render={() => <DialogsContainer/>} path={'/dialogs'}/>\r\n                    <Route render={() => <UsersContainer/>} path={'/users'}/>\r\n                    <Route render={() => <Login/>} path={'/login'}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n    loading: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        initialized: state.app.initialized,\r\n        loading: state.app.loading,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps, {initializeApp})(App)","export default __webpack_public_path__ + \"static/media/orc.384b765a.jpg\";","export default __webpack_public_path__ + \"static/media/tau.f977cb78.jpg\";","export default __webpack_public_path__ + \"static/media/chaos.07a1d1b8.jpg\";","import {v1} from \"uuid\";\r\nimport orc from \"../common/images/orc.jpg\";\r\nimport tau from \"../common/images/tau.jpg\";\r\nimport chaos from '../common/images/chaos.jpg';\r\n\r\nexport type friendsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string;\r\n}\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst initialState = [\r\n    {id: v1(), name: 'Alex', avatar: orc},\r\n    {id: v1(), name: 'Bob', avatar: tau},\r\n    {id: v1(), name: 'Alise', avatar: chaos},\r\n];\r\n\r\nconst sidebarReducer = (state: initialStateType = initialState, action: ActionsType) => {\r\n    return state;\r\n}\r\n\r\ntype ActionsType = string\r\n\r\nexport default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ProfileActionType, profileReducer} from \"./Profile-reducer\";\r\nimport dialogsReducer, {DialogsActionsType} from \"./Dialogs-reducer\";\r\nimport sidebarReducer from \"./Sidebar-reducer\";\r\nimport {UserActionsType, userReducer} from \"./User-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./Auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionsType, AppReducer} from \"./App-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: AppReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n})\r\nexport type  AppActionsTypes = AuthActionsType\r\n    | UserActionsType\r\n    | AppActionsType\r\n    | ProfileActionType\r\n    | DialogsActionsType\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionsTypes>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store","import ReactDOM from \"react-dom\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport App from \"./components/App\";\r\nimport {store} from \"./Redux/Redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AboutProfile_wrapper__3eWB2\",\"profileAvatar\":\"AboutProfile_profileAvatar__1_Rzo\",\"name\":\"AboutProfile_name__DkEM7\",\"li\":\"AboutProfile_li__1bX-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__1wwAr\",\"formWrapper\":\"Login_formWrapper__Shrny\",\"loginBtn\":\"Login_loginBtn__291lV\",\"inputs\":\"Login_inputs__3Q9x9\",\"title\":\"Login_title__Bs2lV\",\"error\":\"Login_error__tL9kr\",\"infoAccount\":\"Login_infoAccount__2C5kD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__1lsNz\",\"userDataWrapper\":\"User_userDataWrapper__eOtYu\",\"avatarWrapper\":\"User_avatarWrapper__T3rs1\",\"avatar\":\"User_avatar__3UYTg\",\"name\":\"User_name__2E-6e\",\"location\":\"User_location__1Xtzx\",\"statusMessage\":\"User_statusMessage__Ohi4C\",\"followBtn\":\"User_followBtn__1aimT\",\"unfollowBtn\":\"User_unfollowBtn__314FG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"Post_profileAvatar__3THsN\",\"post\":\"Post_post__O1VTJ\",\"messagePost\":\"Post_messagePost__2iPwu\",\"bubbleWrapper\":\"Post_bubbleWrapper__2qSDu\",\"messageText\":\"Post_messageText__3fhVU\",\"angle\":\"Post_angle__2icZF\",\"likeWrapper\":\"Post_likeWrapper__26jHo\",\"like\":\"Post_like__1dwUy\",\"countLike\":\"Post_countLike__1WGVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesWrapper\":\"Paginator_pagesWrapper__1m1QT\",\"pageList\":\"Paginator_pageList__2y7qZ\",\"currentPage\":\"Paginator_currentPage__PXPaz\",\"page\":\"Paginator_page__L3I5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__17EYn\",\"loginWrapper\":\"Header_loginWrapper__u5Rwz\",\"login\":\"Header_login__8qCA5\",\"logBtn\":\"Header_logBtn__1zid8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__qcq-B\",\"textFieldWrapper\":\"MyPosts_textFieldWrapper__2KLeH\",\"submitButton\":\"MyPosts_submitButton__2m_z-\",\"customInput\":\"MyPosts_customInput__2pU2H\",\"error\":\"MyPosts_error__QOg5T\",\"newPost\":\"MyPosts_newPost__3u2zl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__3v-zb\",\"message\":\"Message_message__1clby\",\"angle\":\"Message_angle__34xyc\",\"name\":\"Message_name__3WgN1\",\"text\":\"Message_text__2Ca-j\",\"time\":\"Message_time__1hATu\",\"avatar\":\"Message_avatar__15FqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendWrapper\":\"Friends_friendWrapper__1JoFk\",\"friendListWrapper\":\"Friends_friendListWrapper__4eeNi\",\"friends\":\"Friends_friends__vNeRE\",\"avatar\":\"Friends_avatar__1eYQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3bh0v\",\"dialogItems\":\"Dialogs_dialogItems__1iCP5\",\"dialog\":\"Dialogs_dialog__txHS4\",\"messages\":\"Dialogs_messages__23B9s\",\"message\":\"Dialogs_message__1QAEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageSendWrapper\":\"DialogsForm_messageSendWrapper__15UYQ\",\"submitBtn\":\"DialogsForm_submitBtn__2Z7R4\",\"customInput\":\"DialogsForm_customInput__WGP73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2M93A\",\"errorText\":\"FormsControls_errorText__14ubF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DialogsItem_wrapper__1zHV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__z3-5v\",\"loading\":\"Preloader_loading__2Nxxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWallpaper\":\"Profile_profileWallpaper__3rF9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__2tu_m\"};"],"sourceRoot":""}