{"version":3,"file":"static/js/264.e5d285f3.chunk.js","mappings":"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","sources":["webpack://social_network/./src/common/Paginator/Paginator.module.css?abf7","common/Paginator/Paginator.tsx","webpack://social_network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/Users.tsx","Redux/User-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagesWrapper\":\"Paginator_pagesWrapper__a-eTc\",\"pageList\":\"Paginator_pageList__z7ZCk\",\"currentPage\":\"Paginator_currentPage__R23Tt\",\"page\":\"Paginator_page__Uzpfb\"};","import React from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    getItems: (n: number) => void\r\n}\r\nexport const Paginator = React.memo(({totalCount, pageSize, currentPage, getItems}: PropsType) => {\r\n    let pageCounts = Math.ceil(totalCount / pageSize);\r\n    const pages = [];\r\n\r\n    // Google Pagination\r\n    let pageLimit = 10;\r\n    let startPage = currentPage - pageLimit / 2;\r\n    let endPage = currentPage + pageLimit / 2;\r\n\r\n    if (startPage < 1) {\r\n        startPage = 1;\r\n        endPage = pageLimit;\r\n    }\r\n\r\n    if (endPage > pageCounts) {\r\n        endPage = pageCounts;\r\n        startPage = pageCounts - pageLimit;\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n        if (i > 0) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n\r\n\r\n    const pageList = pages.map(n => {\r\n        const onClickGetUsersByPage = () => {\r\n            document.documentElement.scrollTop = 0;\r\n            getItems(n);\r\n        }\r\n\r\n        return (\r\n            <span key={n} className={currentPage === n ? s.currentPage : s.page}\r\n                  onClick={onClickGetUsersByPage}>{n}\r\n            </span>\r\n        );\r\n    })\r\n\r\n    //Functions Buttons\r\n    const firstPageHandler = () => {\r\n        document.documentElement.scrollTop = 0;\r\n        getItems(1);\r\n    }\r\n    const lastPageHandler = () => {\r\n        document.documentElement.scrollTop = 0;\r\n        getItems(pageCounts);\r\n    }\r\n\r\n    //COMPLETE JSX\r\n    return (\r\n        <div className={s.pagesWrapper}>\r\n            <span className={s.page} onClick={firstPageHandler}>{'<<'}</span>\r\n            <div className={s.pageList}>\r\n                {pageList}\r\n            </div>\r\n            <span className={s.page} onClick={lastPageHandler}>{'>>'}</span>\r\n        </div>\r\n    );\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"userWrapper\":\"User_userWrapper__wWeIK\",\"userDataWrapper\":\"User_userDataWrapper__gO1iE\",\"avatarWrapper\":\"User_avatarWrapper__hfgoX\",\"avatar\":\"User_avatar__AqZVv\",\"name\":\"User_name__mGSy7\",\"location\":\"User_location__+cE+P\",\"statusMessage\":\"User_statusMessage__aweV-\",\"followBtn\":\"User_followBtn__v6bDj\",\"unfollowBtn\":\"User_unfollowBtn__o1AP7\"};","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport noAvatar from '../../../common/images/noAvatar.png';\r\nimport {UsersType} from \"../../../Redux/User-reducer\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const User = ({user, followingUsers, unfollowingUsers, followingInProgress}: UserPropsType) => {\r\n    const onClickFollowHandler = () => followingUsers(user.id);\r\n    const onClickUnfollowHandler = () => unfollowingUsers(user.id);\r\n\r\n    const followingButton = user.followed ?\r\n        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={onClickUnfollowHandler}\r\n                className={s.unfollowBtn}>Unfollow</button>\r\n        :\r\n        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={onClickFollowHandler}\r\n                className={s.followBtn}>Follow</button>\r\n\r\n    return (\r\n        <div className={s.userWrapper}>\r\n            <div className={s.avatarWrapper}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={s.avatar}\r\n                         src={user.photos.small ? user.photos.small : noAvatar}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n                {followingButton}\r\n            </div>\r\n            <div className={s.userDataWrapper}>\r\n                <span className={s.name}>{user.name}</span>\r\n                <span className={s.location}>u.location.country</span>\r\n                <span className={s.location}>u.location.city</span>\r\n                <span className={s.statusMessage}>{user.status}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {UsersType} from \"../../Redux/User-reducer\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {User} from \"./User/User\";\r\n\r\ntype UsersPropsType = {\r\n    users: UsersType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    followingInProgress: number[]\r\n    getUsers: (number: number) => void\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n}\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    const usersList = props.users.map(u =>\r\n        <User key={u.id}\r\n              user={u}\r\n              followingUsers={props.followingUsers}\r\n              unfollowingUsers={props.unfollowingUsers}\r\n              followingInProgress={props.followingInProgress}\r\n        />\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalCount={props.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       currentPage={props.currentPage}\r\n                       getItems={props.getUsers}\r\n            />\r\n            {usersList}\r\n        </div>\r\n    );\r\n}","import {AppStateType} from \"./Redux-store\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => state.usersPage.users\r\nexport const getPageLimitSelector = (state: AppStateType) => state.usersPage.pageLimit\r\nexport const getPageSizeSelector = (state: AppStateType) => state.usersPage.pageLimit\r\nexport const getTotalCountSelector = (state: AppStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPageSelector = (state: AppStateType) => state.usersPage.currentPage\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => state.usersPage.followingInProgress\r\nexport const getIsFetchingSelector = (state: AppStateType) => state.usersPage.isFetching\r\n\r\n//Пример селектора через библиотеку reselect\r\n// export const getUsersSuper = createSelector([getUsersSelector], (users: UsersType[]) => {\r\n//     users.filter(u => true)\r\n// })","import {connect} from \"react-redux\";\r\nimport {\r\n    followingUsers,\r\n    followToggle,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    unfollowingUsers,\r\n    UsersType\r\n} from \"../../Redux/User-reducer\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getFollowingInProgressSelector,\r\n    getCurrentPageSelector,\r\n    getPageLimitSelector,\r\n    getTotalCountSelector,\r\n    getUsersSelector, getIsFetchingSelector\r\n} from \"../../Redux/User-selectors\";\r\n\r\nexport class UsersContainer extends React.PureComponent<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageLimit);\r\n    }\r\n\r\n    getUsers = (page: number) => {\r\n        this.props.getUsers(page, this.props.pageLimit);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching && <Preloader/>}\r\n                <Users users={this.props.users}\r\n                       totalCount={this.props.totalCount}\r\n                       pageSize={this.props.pageLimit}\r\n                       currentPage={this.props.currentPage}\r\n                       getUsers={this.getUsers}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       followingUsers={this.props.followingUsers}\r\n                       unfollowingUsers={this.props.unfollowingUsers}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\ntype mapStateToPropsType = {\r\n    users: UsersType[],\r\n    totalCount: number,\r\n    pageLimit: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\ntype mapDispatchToPropsType = {\r\n    setCurrentPage: (number: number) => void\r\n    getUsers: (currentPage: number, pageLimit: number) => void\r\n    followingUsers: (userId: number) => void\r\n    unfollowingUsers: (userId: number) => void\r\n}\r\n\r\n// const mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageLimit: state.usersPage.pageLimit,\r\n//         totalCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageLimit: getPageLimitSelector(state),\r\n        totalCount: getTotalCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        followToggle, setCurrentPage, setFollowingInProgress,\r\n        getUsers, followingUsers, unfollowingUsers\r\n    }),\r\n)(UsersContainer) as ComponentType"],"names":["Paginator","React","totalCount","pageSize","currentPage","getItems","pageCounts","Math","ceil","pages","startPage","pageLimit","endPage","i","push","pageList","map","n","className","s","onClick","document","documentElement","scrollTop","User","user","followingUsers","unfollowingUsers","followingInProgress","followingButton","followed","disabled","some","id","to","src","photos","small","noAvatar","alt","name","status","Users","props","usersList","users","u","getUsers","getUsersSelector","state","usersPage","getPageLimitSelector","getTotalCountSelector","totalUsersCount","getCurrentPageSelector","getFollowingInProgressSelector","getIsFetchingSelector","isFetching","UsersContainer","page","this","Preloader","compose","connect","followToggle","setCurrentPage","setFollowingInProgress"],"sourceRoot":""}