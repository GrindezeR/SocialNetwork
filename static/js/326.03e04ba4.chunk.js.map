{"version":3,"file":"static/js/326.03e04ba4.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.tsx","Utils/validators/validators.ts","webpack://social_network/./src/common/FormsControls/FormsControls.module.css?9c32","common/FormsControls/FormsControls.tsx","webpack://social_network/./src/components/Profile/Profile.module.css?b512","webpack://social_network/./src/components/Profile/AboutProfile/AboutProfile.module.css?7d95","webpack://social_network/./src/components/Profile/AboutProfile/ProfileStatus.module.css?cf1c","components/Profile/AboutProfile/ProfileStatus.tsx","components/Profile/AboutProfile/AboutProfile.tsx","webpack://social_network/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.tsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../javascript/esm|D:/Project/Education/Incubator/Projects/SocialNetwork/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/Redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype MstpType = {\r\n    isAuth: boolean\r\n}\r\n// Создаем HOC чтобы не писать в каждой компоненте проверку на авторизацию,\r\n// просто оборачиваем нужные компоненты в данный HOC\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MstpType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const mstp = (state: AppStateType): MstpType => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    return connect(mstp)(RedirectComponent)\r\n}","import {FormikErrorType} from \"../../components/Login/LoginForm\";\r\n\r\nexport const required = (value: string) => {\r\n    let error = ''\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    error = `Field required`\r\n    return error\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n    let error = ''\r\n    return (value: string) => {\r\n        if (value.length > maxLength) {\r\n            error = `Max length is ${maxLength} symbols`\r\n            return error;\r\n        }\r\n        return undefined\r\n    }\r\n}\r\ntype ValuesType = {\r\n    email: string\r\n    password: string\r\n    remember: boolean\r\n}\r\n\r\nexport const validateFormik = (values: ValuesType,\r\n                               errors: FormikErrorType,\r\n                               minPassLength: number) => {\r\n    if (!values.email) {\r\n        errors.email = 'Email is required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password required';\r\n    } else if (values.password.length < minPassLength) {\r\n        errors.password = `Min length ${minPassLength} characters`;\r\n    }\r\n    return errors;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormsControls_error__kD7mL\",\"errorText\":\"FormsControls_errorText__bBbMT\"};","import React from \"react\";\r\nimport {FieldProps} from \"formik\";\r\nimport s from './FormsControls.module.css';\r\n\r\ntype CustomInputPropsType = FieldProps & {\r\n    ClassName: string\r\n    placeholder: string\r\n}\r\n\r\nexport const CustomInput = ({form: {touched, errors}, field,\r\n                                ClassName, placeholder, ...props}: CustomInputPropsType) => {\r\n\r\n    const customClass = (touched && errors[field.name]) ? `${ClassName} ${s.error}` : ClassName\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                placeholder={placeholder}\r\n                className={customClass} {...field} {...props}/>\r\n            <div className={s.errorText}>\r\n                {touched && errors[field.name]}\r\n            </div>\r\n        </>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profileWallpaper\":\"Profile_profileWallpaper__pAbkD\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AboutProfile_wrapper__lmPEy\",\"profileAvatar\":\"AboutProfile_profileAvatar__rBSGW\",\"name\":\"AboutProfile_name__vlxaw\",\"li\":\"AboutProfile_li__qicvk\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__q47k2\"};","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from './ProfileStatus.module.css'\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.PureComponent<ProfileStatusPropsType> {\r\n    // Так создается state в классовых компонентах\r\n    state = {\r\n        editMode: false,\r\n        inputValue: this.props.status,\r\n    }\r\n\r\n    //Важно использовать тут стрелочную функцию, чтобы не потерять контекст this\r\n    // т.к. контекст стреклки определяется в момент инициализации,\r\n    // в таком случае это будет наш объект/компонента\r\n    activateEdit = () => {\r\n        // Так state можно модифицировать, setState - асинхронная операция\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEdit = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n\r\n        if (this.state.inputValue !== this.props.status) {\r\n            this.props.updateProfileStatus(this.state.inputValue);\r\n        }\r\n    }\r\n\r\n    deactivateEditEnter = (e: KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            this.deactivateEdit();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                inputValue: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            this.setState({\r\n                inputValue: e.currentTarget.value\r\n            })\r\n        }\r\n\r\n        const selectAllHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            e.currentTarget.select();\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {this.state.editMode ?\r\n                    <input value={this.state.inputValue}\r\n                           autoFocus\r\n                           onBlur={this.deactivateEdit}\r\n                           onChange={onChangeInputHandler}\r\n                           onKeyPress={this.deactivateEditEnter}\r\n                           onFocus={selectAllHandler}\r\n                    />\r\n                    :\r\n                    <span className={s.status}\r\n                          onDoubleClick={this.activateEdit}>\r\n                        {this.props.status || 'No status'}\r\n                    </span>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport avatar from '../../../common/images/avatar.webp';\r\nimport s from './AboutProfile.module.css';\r\nimport {ProfileType} from \"../../../Redux/Profile-reducer\";\r\nimport workYes from '../../../common/images/workYes.png';\r\nimport workNo from '../../../common/images/workNo.png';\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype AboutProfileType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\n\r\nfunction AboutProfile(props: AboutProfileType) {\r\n    let {profile, status} = props\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div>\r\n                <img className={s.profileAvatar}\r\n                     src={profile.photos.large ? profile.photos.large : avatar}\r\n                     alt={'Avatar'}/>\r\n            </div>\r\n            <div>\r\n                <div className={s.name}>\r\n                    {profile.fullName}\r\n                    <ProfileStatus status={status}\r\n                                   updateProfileStatus={props.updateProfileStatus}/>\r\n                </div>\r\n\r\n                <ul>\r\n                    <li className={s.li}>\r\n                        <span>About Me:</span> {profile.aboutMe}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>\r\n                            Looking for job:\r\n                        </span>\r\n                        <img src={profile.lookingForAJob ? workYes : workNo} width={'20px'} alt=\"job\"/>\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Description for job:</span> {profile.lookingForAJobDescription}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>VK:</span> {profile.contacts.vk}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Facebook:</span> {profile.contacts.facebook}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Website:</span> {profile.contacts.website}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Twitter:</span> {profile.contacts.twitter}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Instagram:</span> {profile.contacts.instagram}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>Youtube:</span> {profile.contacts.youtube}\r\n                    </li>\r\n                    <li className={s.li}>\r\n                        <span>GitHub:</span> {profile.contacts.github}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutProfile;","// extracted by mini-css-extract-plugin\nexport default {\"profileAvatar\":\"Post_profileAvatar__oV4-V\",\"post\":\"Post_post__JldY-\",\"messagePost\":\"Post_messagePost__He0qG\",\"bubbleWrapper\":\"Post_bubbleWrapper__PHGUL\",\"messageText\":\"Post_messageText__NAbsn\",\"angle\":\"Post_angle__r1hf6\",\"likeWrapper\":\"Post_likeWrapper__Fe+Iq\",\"like\":\"Post_like__e9HzU\",\"countLike\":\"Post_countLike__+Vg-C\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport avatarPost from '../../../../common/images/avatar.webp'\r\nimport {PostDataType} from \"../../../../Redux/Profile-reducer\";\r\n\r\nfunction Post(props: PostDataType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.messagePost}>\r\n                <div className={s.likeWrapper}>\r\n                    <img className={s.profileAvatar} src={avatarPost} alt={'Avatar'}/>\r\n                    <div className={s.like}>Like</div>\r\n                    <div className={s.countLike}>{props.likesCount}</div>\r\n                </div>\r\n                <div className={s.bubbleWrapper}>\r\n                    <div className={s.angle}/>\r\n                    <span className={s.messageText}>{props.message}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyPosts_wrapper__yHKcB\",\"textFieldWrapper\":\"MyPosts_textFieldWrapper__WOpuk\",\"submitButton\":\"MyPosts_submitButton__qYTeQ\",\"customInput\":\"MyPosts_customInput__nHiJU\",\"error\":\"MyPosts_error__MlNjm\",\"newPost\":\"MyPosts_newPost__Kjhjb\"};","import {Field, Form, Formik, FormikHelpers} from \"formik\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator} from \"../../../Utils/validators/validators\";\r\nimport {CustomInput} from \"../../../common/FormsControls/FormsControls\";\r\nimport {FieldProps} from \"formik/dist/Field\";\r\n\r\ntype NewPostType = {\r\n    newPostText: string\r\n}\r\ntype MyPostsFormPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\nexport const MyPostsForm = ({addPost}: MyPostsFormPropsType) => {\r\n\r\n    const initialValues: NewPostType = {\r\n        newPostText: ''\r\n    }\r\n\r\n    const onSubmitHandler = (values: NewPostType, actions: FormikHelpers<NewPostType>) => {\r\n        addPost(values.newPostText);\r\n        actions.resetForm();\r\n        actions.setSubmitting(false);\r\n    }\r\n\r\n    const customField = (props: FieldProps) => {\r\n        return <CustomInput ClassName={s.customInput}\r\n                            placeholder={`Type your post`}\r\n                            {...props}/>\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmitHandler}\r\n            validateOnBlur={false}>\r\n                    <Form className={s.newPost}>\r\n                        <Field name={'newPostText'}\r\n                               validate={maxLengthCreator(5)}\r\n                               placeholder={'Type your post'}>\r\n                            {customField}\r\n                        </Field>\r\n                        <button className={s.submitButton} type={'submit'}>Send</button>\r\n                    </Form>\r\n        </Formik>\r\n    );\r\n}","import React from \"react\";\r\nimport Post from \"./Posts/Post\";\r\nimport s from './MyPosts.module.css';\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n    const postsElements = props.postsData.map(p => {\r\n        return (\r\n            <Post key={p.id}\r\n                  id={p.id}\r\n                  message={p.message}\r\n                  likesCount={p.likesCount}/>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <MyPostsForm addPost={props.addPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport {addPost, PostDataType} from \"../../../Redux/Profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// Типизация пропсов для компоненты которая сидит в обертке\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    postsData: PostDataType[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        postsData: state.profilePage.postData,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPost(newPostText)),\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport AboutProfile from \"./AboutProfile/AboutProfile\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div className={s.profileWallpaper}>\r\n            <AboutProfile profile={props.profile}\r\n                          updateProfileStatus={props.updateProfileStatus}\r\n                          status={props.status}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/Redux-store\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {getProfileStatus, getUsersProfile, ProfileType, updateProfileStatus} from \"../../Redux/Profile-reducer\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<withRouterPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            // userId = '20102';\r\n            userId = this.props.authUserId.toString();\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.props.profile && <Preloader/>}\r\n                <Profile {...this.props}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport type ProfilePropsType = mapStateToPropsType & mapDispatchToPropsType\r\ntype withRouterPropsType = RouteComponentProps<PathParamsType> & ProfilePropsType;\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType,\r\n    status: string,\r\n    authUserId: number,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUsersProfile: (userId: string) => void\r\n    getProfileStatus: (userId: string) => void\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUsersProfile, getProfileStatus, updateProfileStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["withAuthRedirect","Component","connect","state","isAuth","auth","props","restProps","to","maxLengthCreator","maxLength","value","length","validateFormik","values","errors","minPassLength","email","test","password","CustomInput","form","touched","field","ClassName","placeholder","customClass","name","s","className","ProfileStatus","editMode","inputValue","status","activateEdit","setState","deactivateEdit","updateProfileStatus","deactivateEditEnter","e","key","prevProps","prevState","this","autoFocus","onBlur","onChange","currentTarget","onKeyPress","onFocus","select","onDoubleClick","React","profile","src","photos","large","avatar","alt","fullName","aboutMe","lookingForAJob","workYes","workNo","width","lookingForAJobDescription","contacts","vk","facebook","website","twitter","instagram","youtube","github","avatarPost","likesCount","message","MyPostsForm","addPost","initialValues","newPostText","onSubmit","actions","resetForm","setSubmitting","validateOnBlur","validate","type","postsElements","postsData","map","p","id","MyPostsContainer","profilePage","postData","dispatch","MyPosts","ProfileContainer","userId","match","params","authUserId","toString","getUsersProfile","getProfileStatus","Preloader","compose","withRouter","_objectWithoutProperties","source","excluded","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}